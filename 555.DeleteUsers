#!/bin/sh

# Define log file
LOGFILE="/var/log/555.DeleteUsers.log"

# Function to log messages
log() {
    echo "$(date '+%m-%d-%Y %H:%M:%S') - $1" | tee -a $LOGFILE
}

# Start logging
log "-------- "
log "Script started."
log " "

# Capturing uniqname of user currently logging in to system
loggedInUser=$(echo "show State:/Users/ConsoleUser" | scutil | awk '/Name :/ { print $3 }')

# Checking usage of each disk slice
df -H | grep -vE '^Filesystem|tmpfs|cdrom|devfs|map' | awk '{ print $5 " " $9 }' | while read output;
do
  echo $output
  usep=$(echo $output | awk '{ print $1}' | cut -d'%' -f1  )
# Amount of disk space in use to trigger script
  limit=90
  partition=$(echo $output | awk '{ print $2 }' )

# Confirming that the user Data slice is triggering usage
  if [ $usep -ge $limit ] && [ $partition = '/System/Volumes/Data' ] ; then

# Log users to be deleted
log "Users to be deleted:"
log " "

    # Email notification
    deletedUsers=""

    # Checking for protected users
    # Add additional accounts to be saved below
    for home in $(ls /Users | grep -v -E "admin|.localized|${loggedInUser}|Shared|root|loginwindow"); do ### <-- whitelist users here

  # Verify user removal
  if [ $? -eq 0 ]; then
      log "Deleted user: $home"
      deletedUsers="$deletedUsers $home"
      
      # Check and remove home directory
      if [ -d "/Users/$home" ]; then
          rm -rf "/Users/$home"
          log "Deleted home directory for: $home"
      fi
  else
      log "Failed to delete user: $home"
  fi
done

# End logging
log " "
log "Process complete."
log " "

# Sending email notification of activity to designated admin
## Change sender and recipients below

    echo "To: admin@example.com\nSubject: Disk usage $usep% on $(hostname)\nLocal storage has exceeded $limit%. The following users were automatically deleted: $deletedUsers" | sendmail -f admin@example.com -t admin@example.com 
  fi
done
